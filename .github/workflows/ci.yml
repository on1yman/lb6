name: CI workflow for homework

on:
  [push, pull_request]

jobs:
  build_on_linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - cpp_comp: g++
            c_comp: gcc
            source: true
          - cpp_comp: clang++
            c_comp: clang
            source: false

    steps:
      - name: checking out repository
        uses: actions/checkout@v4

      - name: preparing build
        run:  cmake -H. -B_build -D CMAKE_CXX_COMPILER=${{matrix.cpp_comp}} -D CMAKE_C_COMPILER=${{matrix.c_comp}} 
      - name: building
        run:  cmake --build _build
      - name: checking programs output
        run:  |
          echo "1 -5  6" | _build/solver_application/solver_app
          _build/hello_world_application/hello
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: _build${{matrix.c_comp}}
          path: _build/  
          retention-days: 1

  build_on_windows:
    runs-on: windows-latest
    steps:
      - name: checking out repository
        uses: actions/checkout@v4

      - name: preparing build
        run:  cmake . -B_build 
      - name: building
        run:  cmake --build _build --config Release
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows_build
          path: _build/    
          retention-days: 1

  build_on_mac:
    runs-on: macos-latest
    steps:
      - name: checking out repository
        uses: actions/checkout@v4

      - name: preparing build
        run:  cmake -H. -B_build
      - name: building
        run:  cmake --build _build
  
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: _buildmac
          path: _build/  
          retention-days: 1
    
  Create_sources_deb_rpm:
    name: Create packages
    needs: [build_on_linux, build_on_mac, build_on_windows]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: checking out repository
        uses: actions/checkout@v4
        
      - name: install dependencies
        run: sudo apt-get install -y rpm
        
      - name: Create required files in build directory
        run: |
          mkdir -p _build
          echo "# Change Log" > _build/ChangeLog.md
          echo "* Version ${GITHUB_REF#refs/tags/v} - $(date +'%Y-%m-%d')" >> _build/ChangeLog.md
          echo "- Initial release" >> _build/ChangeLog.md
          echo "Package for solver of quadratic equations application" > _build/DESCRIPTION
          
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: _buildgcc
          path: _build/
          
      - name: Generate packages
        run: |
          cd _build/
          mkdir -p _artifacts
          cpack -G "DEB" && mv *.deb _artifacts/
          cpack -G "RPM" && mv *.rpm _artifacts/
          cpack -G "TGZ" && mv *.tar.gz _artifacts/
          cpack -G "ZIP" && mv *.zip _artifacts/
          
      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: linux_files
          path: _build/_artifacts/
          retention-days: 1

  Create_dmg:
    name: Create macOS package
    needs: [build_on_linux, build_on_mac, build_on_windows]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: macos-latest
    steps:
      - name: checking out repository
        uses: actions/checkout@v4
        
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: _buildmac
          path: _build/
          
      - name: Create DMG package
        run: |
          cd _build/
          mkdir _artifacts
          cpack -G "DragNDrop"
          mv *.dmg _artifacts/
          
      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: mac_files
          path: _build/_artifacts/
          retention-days: 1

  Create_msi:
    name: Create Windows packages
    needs: [build_on_linux, build_on_mac, build_on_windows]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    steps:
      - name: checking out repository
        uses: actions/checkout@v4
        
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows_build
          path: _build/
          
      - name: Create Windows installers
        run: |
          cd _build/
          mkdir _artifacts
          cpack -G "NSIS" && move *.exe _artifacts\
          cpack -G "WIX" && move *.msi _artifacts\
          
      - name: Upload installers
        uses: actions/upload-artifact@v4
        with:
          name: win_files
          path: _build/_artifacts/
          retention-days: 1

  create_release:
    name: Publish Release
    needs: [Create_sources_deb_rpm, Create_dmg, Create_msi]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download all packages
        run: |
          mkdir -p release_packages
          actions/download-artifact@v4:
            name: linux_files
            path: release_packages/linux
          actions/download-artifact@v4:
            name: mac_files
            path: release_packages/mac
          actions/download-artifact@v4:
            name: win_files
            path: release_packages/win
          
      - name: Prepare release
        run: |
          mkdir -p release_assets
          find release_packages -type f -exec cp {} release_assets/ \;
          ls -la release_assets/
          
      - name: Extract version
        run: |
          version=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$version" >> $GITHUB_ENV
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: "Release v${{ env.VERSION }}"
          body: "Automated release containing all platform packages"
          files: |
            release_assets/*
          draft: false
          prerelease: false
