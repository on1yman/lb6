name: CI workflow for homework

on:
  [push, pull_request]

permissions:
  contents: write 

jobs:
  build_on_linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - cpp_comp: g++
            c_comp: gcc
            source: true
          - cpp_comp: clang++
            c_comp: clang
            source: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare build
        run: cmake -H. -B_build -D CMAKE_CXX_COMPILER=${{ matrix.cpp_comp }} -D CMAKE_C_COMPILER=${{ matrix.c_comp }}

      - name: Build
        run: cmake --build _build

      - name: Check programs output
        run: |
          echo "1 -5 6" | _build/solver_application/solver_app
          _build/hello_world_application/hello

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: _build${{ matrix.c_comp }}
          path: _build/
          retention-days: 1

  build_on_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare build
        run: cmake . -B_build

      - name: Build
        run: cmake --build _build --config Release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows_build
          path: _build/
          retention-days: 1

  build_on_mac:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare build
        run: cmake -H. -B_build

      - name: Build
        run: cmake --build _build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: _buildmac
          path: _build/
          retention-days: 1

  Create_sources_deb_rpm:
    name: Create sources, deb, rpm packages
    needs: [build_on_linux, build_on_mac, build_on_windows]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm dpkg-dev

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: _buildgcc
          path: _build/

      - name: Generate packages
        run: |
          cd _build/
          mkdir -p _artifacts
          cpack -G DEB
          mv *.deb _artifacts/ || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux files
          path: _build/_artifacts/
          retention-days: 1

  Create_dmg:
    name: Create .dmg package
    needs: [build_on_linux, build_on_mac, build_on_windows]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: _buildmac
          path: _build/

      - name: Create dmg files
        run: |
          cd _build/
          mkdir _artifacts
          cpack -G DragNDrop
          mv *.dmg _artifacts/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac files
          path: _build/_artifacts/
          retention-days: 1

  Create_msi:
    name: Create .msi and .exe files
    needs: [build_on_linux, build_on_mac, build_on_windows]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows_build
          path: _build/

      - name: Create .msi and .exe files
        run: |
          cd _build/
          mkdir _artifacts
          cpack -G NSIS
          cpack -G WIX
          move "*.exe" "_artifacts\"
          move "*.msi" "_artifacts\"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: win files
          path: _build/_artifacts/
          retention-days: 1

  create_release:
    name: Create release
    needs: [Create_sources_deb_rpm, Create_dmg, Create_msi]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug: Show tag
        run: echo "Current ref: ${{ github.ref_name }}"

      - name: Download artifacts mac
        uses: actions/download-artifact@v4
        with:
          name: mac files
          path: release/

      - name: Download artifacts win
        uses: actions/download-artifact@v4
        with:
          name: win files
          path: release/

      - name: Download artifacts linux
        uses: actions/download-artifact@v4
        with:
          name: linux files
          path: release/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Automated release with built binaries and source code."
          files: release/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
